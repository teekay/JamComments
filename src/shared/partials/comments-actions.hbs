            <div class="comments-actions">
                <div class="select-comments-action">
                    <input type="checkbox" id="comment-action-select-all" name="comment-action">
                    <label for="comment-action">Select All</label>
                    <div class="comments-action-select">
                        <select name="languages" id="manageComments">
                            <option value="default">Select action...</option>
                            <option class="select-option" value="approve">Approve</option>
                            <option class="select-option" value="delete">Delete</option>
                        </select>
                    </div>
                </div>
                <div class="sort-comments">
                    <select name="languages" id="sortComments">
                        <option value="">Sort By...</option>
                        <option class="select-option" value="desc">Newest first (default)</option>
                        <option class="select-option" value="asc">Oldest first</option>
                    </select>
                </div>
            </div>
<script>
    document.getElementById('comment-action-select-all').addEventListener('click', function(ev) {
        let toSelect = !!ev.target.checked;
        Array.from(document.getElementsByClassName('comment-single-select')).forEach(e => {
            e.checked = toSelect;
        });
    });
    function groupAction(modalId, url) {
        let token = document.querySelector('meta[name="csrf-token"]').getAttribute('content');
        let ids = Array.from(document.getElementsByClassName('comment-single-select')).filter(e => e.checked).map(e => e.value);
        if (!ids.length) {
            console.log("Nothing is selected :(");
            return;
        }

        let confirmModal = document.getElementById(modalId);
        let btnConfirm = confirmModal.querySelector('.confirm');
        let cancelControls = Array.from(confirmModal.querySelectorAll('.close'));
        let confirm = () => {
        fetch(url, {
            method: 'POST',
            body: JSON.stringify({ ids }),
            headers: {
            'CSRF-Token': token,
            'content-type': 'application/json'
            }
        }).then(response => {
            if (response.status === 201) {
            document.location = document.location;
            return;
            }
            // TODO show error
            console.error(response.status);
            confirmModal.style.display = 'none';
        });
        };
        let cancel = () => {
            btnConfirm.removeEventListener('click', confirm);
            cancelControls.forEach(el => el.removeEventListener('click', cancel));
            confirmModal.style.display = 'none';
        }

        btnConfirm.addEventListener('click', confirm);
        cancelControls.forEach(el => el.addEventListener('click', cancel));
        confirmModal.style.display = 'block';
    }
    document.getElementById('manageComments').addEventListener('change', function(evt) {

        let select = evt.target;
        if (select.value === "delete") {
            select.selectedIndex = 0;
            groupAction('deleteCommentsModal', document.location.href.indexOf('review') !== -1 ? '/dashboard/spam/deleteMany' : '/dashboard/comments/deleteMany');
        } else if (select.value === "approve") {
            select.selectedIndex = 0;
            groupAction('approveCommentsModal', '/dashboard/spam/unmarkMany');
        }
    });

    document.getElementById('sortComments').addEventListener('change', function(ev) {
        let el = ev.target;
        let sortOrder = el.options[el.selectedIndex].value;
        if (sortOrder !== '') {
            let location = document.location.href;
            let redirectTo = `${location.includes('/review') ? '/dashboard/review/' : '/dashboard/'}?sort=${sortOrder}`;
            document.location = redirectTo;
        }
    });

    let params = new URLSearchParams(document.location.search);
    let sortOption = Array.from(document.getElementById('sortComments').options).find(opt => opt.value === params.get('sort'));
    if (sortOption) {
        sortOption.selected = true;
    }
</script>